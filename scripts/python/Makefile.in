.PHONY: default
default: all

.PHONY: all
all: \
cpplint-all
# compile-all
# cppcheck-all

CXX_SRCS := $(wildcard *.cpp)
CXX_OBJS := ${CXX_SRCS:.cpp=.o}

# exclusions


# TODO: better way to select correct clang name
CC = clang

CFLAGS = -g -std=c++1y -stdlib=libc++ --analyze -I ../../c++/gsl

## Not sure about Wall, since some code intentionally would generate warnings, while other code should not... Needs more thinking.
# -Wall


.PHONY: compile-all
compile-all: check-clang $(CXX_OBJS)

.PHONY: check-clang
check-clang:
	clang --version || (echo "Error, $(CC) not found" && false)

%.o: %.cpp
	@if ! grep -q $@ "../../python/exclusions"; then  \
    echo '$(CC) $(CFLAGS) -c $< -o $@ || (cat $< | nl -ba | grep -v 'md-split' && false)'; \
		$(CC) $(CFLAGS) -c $< -o $@ || (cat $< | nl -ba | grep -v 'md-split' && false) \
  fi;

#### cppcheck

CXX_CHECK := ${CXX_SRCS:.cpp=.check}

.PHONY: cppcheck-all
cppcheck-all: $(CXX_CHECK)

%.check: %.cpp
	@cppcheck -q $< --error-exitcode=1 || (cat $< | nl -ba | grep -v 'md-split' && false)

#### cpplint
CXX_LINT := ${CXX_SRCS:.cpp=.lint}

.PHONY: cpplint-all
cpplint-all:
	@python  ../../python/cpplint_wrap.py  *.cpp

#	@python ../../python/cpplint.py --verbose=0 --filter=-readability/fn_size,-build/namespaces,-whitespace/tab $< || (cat $< | nl -ba | grep -v 'md-split' && false)


# todo
# -readability/fn_size  wrap function calls into class
#,-whitespace/line_length
